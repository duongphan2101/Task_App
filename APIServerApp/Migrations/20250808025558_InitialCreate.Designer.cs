// <auto-generated />
using System;
using APIServerApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIServerApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250808025558_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIServerApp.Model.ChiTietCongViec", b =>
                {
                    b.Property<int>("MaChiTietCV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietCV"));

                    b.Property<string>("MaCongViec")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MucDoUuTien")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThucCongViec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhanCongViec")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoNgayHoanThanh")
                        .HasColumnType("int");

                    b.Property<int>("TienDo")
                        .HasColumnType("int");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietCV");

                    b.HasIndex("MaCongViec");

                    b.ToTable("ChiTietCongViec");
                });

            modelBuilder.Entity("APIServerApp.Model.ChucVu", b =>
                {
                    b.Property<string>("MaChucVu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaChucVu");

                    b.ToTable("ChucVu");
                });

            modelBuilder.Entity("APIServerApp.Model.CongViec", b =>
                {
                    b.Property<string>("MaCongViec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("LapLai")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NguoiGiao")
                        .HasColumnType("int");

                    b.Property<string>("TanSuat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaCongViec");

                    b.HasIndex("NguoiGiao");

                    b.ToTable("CongViec");
                });

            modelBuilder.Entity("APIServerApp.Model.DonVi", b =>
                {
                    b.Property<string>("MaDonVi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenDonVi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaDonVi");

                    b.ToTable("DonVi");
                });

            modelBuilder.Entity("APIServerApp.Model.Email", b =>
                {
                    b.Property<string>("MaEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ChiTietCongViecMaChiTietCV")
                        .HasColumnType("int");

                    b.Property<int>("MaChiTietCV")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiGui")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaEmail");

                    b.HasIndex("ChiTietCongViecMaChiTietCV");

                    b.HasIndex("MaChiTietCV");

                    b.HasIndex("NguoiGui");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("APIServerApp.Model.MaCongViecSequence", b =>
                {
                    b.Property<string>("MaDonVi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaPhongBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<int?>("STT")
                        .HasColumnType("int");

                    b.HasKey("MaDonVi", "MaPhongBan");

                    b.HasIndex("MaPhongBan");

                    b.ToTable("MaCongViecSequence");
                });

            modelBuilder.Entity("APIServerApp.Model.NguoiDung", b =>
                {
                    b.Property<int>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiDung"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("LaLanhDao")
                        .HasColumnType("bit");

                    b.Property<string>("MaChucVu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaDonVi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaPhongBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("MaChucVu");

                    b.HasIndex("MaDonVi");

                    b.HasIndex("MaPhongBan");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("APIServerApp.Model.NguoiLienQuanCongViec", b =>
                {
                    b.Property<string>("MaCongViec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(0);

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaCongViec", "MaNguoiDung");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("NguoiLienQuanCongViec");
                });

            modelBuilder.Entity("APIServerApp.Model.NguoiNhanEmail", b =>
                {
                    b.Property<string>("MaEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(0);

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaEmail", "MaNguoiDung");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("NguoiNhanEmail");
                });

            modelBuilder.Entity("APIServerApp.Model.PhanHoiCongViec", b =>
                {
                    b.Property<int>("MaPhanHoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhanHoi"));

                    b.Property<string>("Loai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaCongViec")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("MaPhanHoi");

                    b.HasIndex("MaCongViec");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("PhanHoiCongViec");
                });

            modelBuilder.Entity("APIServerApp.Model.PhongBan", b =>
                {
                    b.Property<string>("MaPhongBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaPhongBan");

                    b.ToTable("PhongBan");
                });

            modelBuilder.Entity("APIServerApp.Model.TepDinhKemEmail", b =>
                {
                    b.Property<string>("MaEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(0);

                    b.Property<int>("MaTep")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("MaEmail", "MaTep");

                    b.HasIndex("MaTep");

                    b.ToTable("TepDinhKemEmail");
                });

            modelBuilder.Entity("APIServerApp.Model.TepTin", b =>
                {
                    b.Property<int>("MaTep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTep"));

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenTep")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenTepGoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaTep");

                    b.ToTable("TepTin");
                });

            modelBuilder.Entity("APIServerApp.Model.ThongBaoNguoiDung", b =>
                {
                    b.Property<int>("MaThongBao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThongBao"));

                    b.Property<int>("MaChiTietCV")
                        .HasColumnType("int");

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThongBao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("MaThongBao");

                    b.HasIndex("MaChiTietCV");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("ThongBaoNguoiDung");
                });

            modelBuilder.Entity("APIServerApp.Model.ChiTietCongViec", b =>
                {
                    b.HasOne("APIServerApp.Model.CongViec", "CongViec")
                        .WithMany("ChiTietCongViecs")
                        .HasForeignKey("MaCongViec")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CongViec");
                });

            modelBuilder.Entity("APIServerApp.Model.CongViec", b =>
                {
                    b.HasOne("APIServerApp.Model.NguoiDung", "NguoiGiaoObj")
                        .WithMany("CongViecs")
                        .HasForeignKey("NguoiGiao");

                    b.Navigation("NguoiGiaoObj");
                });

            modelBuilder.Entity("APIServerApp.Model.Email", b =>
                {
                    b.HasOne("APIServerApp.Model.ChiTietCongViec", null)
                        .WithMany("Emails")
                        .HasForeignKey("ChiTietCongViecMaChiTietCV");

                    b.HasOne("APIServerApp.Model.ChiTietCongViec", "ChiTietCongViec")
                        .WithMany()
                        .HasForeignKey("MaChiTietCV")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APIServerApp.Model.NguoiDung", "NguoiGuiObj")
                        .WithMany()
                        .HasForeignKey("NguoiGui")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ChiTietCongViec");

                    b.Navigation("NguoiGuiObj");
                });

            modelBuilder.Entity("APIServerApp.Model.MaCongViecSequence", b =>
                {
                    b.HasOne("APIServerApp.Model.DonVi", "DonVi")
                        .WithMany("MaCongViecSequences")
                        .HasForeignKey("MaDonVi")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APIServerApp.Model.PhongBan", "PhongBan")
                        .WithMany("MaCongViecSequences")
                        .HasForeignKey("MaPhongBan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("APIServerApp.Model.NguoiDung", b =>
                {
                    b.HasOne("APIServerApp.Model.ChucVu", "ChucVu")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("MaChucVu")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("APIServerApp.Model.DonVi", "DonVi")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("MaDonVi")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("APIServerApp.Model.PhongBan", "PhongBan")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("MaPhongBan")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ChucVu");

                    b.Navigation("DonVi");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("APIServerApp.Model.NguoiLienQuanCongViec", b =>
                {
                    b.HasOne("APIServerApp.Model.CongViec", "CongViec")
                        .WithMany("NguoiLienQuanCongViecs")
                        .HasForeignKey("MaCongViec")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APIServerApp.Model.NguoiDung", "NguoiDung")
                        .WithMany("NguoiLienQuanCongViecs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CongViec");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("APIServerApp.Model.NguoiNhanEmail", b =>
                {
                    b.HasOne("APIServerApp.Model.Email", "Email")
                        .WithMany("NguoiNhanEmails")
                        .HasForeignKey("MaEmail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APIServerApp.Model.NguoiDung", "NguoiDung")
                        .WithMany("NguoiNhanEmails")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Email");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("APIServerApp.Model.PhanHoiCongViec", b =>
                {
                    b.HasOne("APIServerApp.Model.CongViec", "CongViec")
                        .WithMany("PhanHoiCongViecs")
                        .HasForeignKey("MaCongViec")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APIServerApp.Model.NguoiDung", "NguoiDung")
                        .WithMany("PhanHoiCongViecs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CongViec");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("APIServerApp.Model.TepDinhKemEmail", b =>
                {
                    b.HasOne("APIServerApp.Model.Email", "Email")
                        .WithMany("TepDinhKemEmails")
                        .HasForeignKey("MaEmail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APIServerApp.Model.TepTin", "TepTin")
                        .WithMany("TepDinhKemEmails")
                        .HasForeignKey("MaTep")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Email");

                    b.Navigation("TepTin");
                });

            modelBuilder.Entity("APIServerApp.Model.ThongBaoNguoiDung", b =>
                {
                    b.HasOne("APIServerApp.Model.ChiTietCongViec", "ChiTietCongViec")
                        .WithMany()
                        .HasForeignKey("MaChiTietCV")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("APIServerApp.Model.NguoiDung", "NguoiDung")
                        .WithMany("ThongBaoNguoiDungs")
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ChiTietCongViec");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("APIServerApp.Model.ChiTietCongViec", b =>
                {
                    b.Navigation("Emails");
                });

            modelBuilder.Entity("APIServerApp.Model.ChucVu", b =>
                {
                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("APIServerApp.Model.CongViec", b =>
                {
                    b.Navigation("ChiTietCongViecs");

                    b.Navigation("NguoiLienQuanCongViecs");

                    b.Navigation("PhanHoiCongViecs");
                });

            modelBuilder.Entity("APIServerApp.Model.DonVi", b =>
                {
                    b.Navigation("MaCongViecSequences");

                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("APIServerApp.Model.Email", b =>
                {
                    b.Navigation("NguoiNhanEmails");

                    b.Navigation("TepDinhKemEmails");
                });

            modelBuilder.Entity("APIServerApp.Model.NguoiDung", b =>
                {
                    b.Navigation("CongViecs");

                    b.Navigation("NguoiLienQuanCongViecs");

                    b.Navigation("NguoiNhanEmails");

                    b.Navigation("PhanHoiCongViecs");

                    b.Navigation("ThongBaoNguoiDungs");
                });

            modelBuilder.Entity("APIServerApp.Model.PhongBan", b =>
                {
                    b.Navigation("MaCongViecSequences");

                    b.Navigation("NguoiDungs");
                });

            modelBuilder.Entity("APIServerApp.Model.TepTin", b =>
                {
                    b.Navigation("TepDinhKemEmails");
                });
#pragma warning restore 612, 618
        }
    }
}
